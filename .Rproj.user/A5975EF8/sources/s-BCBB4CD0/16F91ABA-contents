library(ggplot2) 
library(maps)
library(sf)
library(mapview)

df <- read_xlsx("~/RProject/AMF-Mycophyto/data/sol/soil_species_combined_with_2021.xlsx")

ps <- df[,1:2] %>% filter(!is.na(Longitude))

# ps$lon <- as.numeric(coords$Longitude)

# ps$lat <- as.numeric(coords$Latitude)

world_map <- st_as_sf(map('france', plot = FALSE, fill = TRUE))

# Convert the coordinates data to an sf object
coordinates_sf <- st_as_sf(ps, coords = c("Longitude", "Latitude"), crs = st_crs(world_map))

# Create a map using mapview
france_map <- mapview(world_map) + mapview(coordinates_sf, color = "red", size = 0.5)

# Show the interactive map
france_map




# 
# 
# 
# world_map <- map('france')
# g <- ggplot(world_map, aes(long, lat)) +  
#   geom_polygon(fill = "gray90", color = "gray50") +  
#   coord_map("mercator") +  
#   ggtitle("France") +  
#   theme_void() 
# g
# g + geom_point(data = coords, aes(x = lon, y = lat), color = "red", size = 3)
#   
# 
# library(tmap)
# library(mapview)
# library(sf)
# coords.map <- get_stamenmap(c(left = -5.5, bottom = 41.2, right=10.415,top=51.1), zoom = 6, maptype = "toner-lite")
# map <-ggmap(coords.map, extent="device", legend="none")
# # Create example data of points 
# lon = combined_df$lon
# lat = combined_df$lat
# 
# 
# 
# # Convert the data frame to a spatial points data frame 
# points_sdf <- st_as_sf(points_df, coords = c("lon", "lat"), crs = 4326) 
# 
# # Plot the points on a map 
# mapview(points_sdf)
# 
# library(ggplot2)
# library(maps)
# library(rnaturalearth)
# library(rnaturalearthdata)
# 
# 
# coords <- data.frame(
#   longitude = ps[,1],  # Replace with your actual longitude values
#   latitude = ps[,2]  # Replace with your actual latitude values
# )
# coordinates_sf <- st_as_sf(coords, coords = c("longitude", "latitude"))
# 
# 
# 
# 
# library(ggplot2)
# library(maps)
# 
# # Fetch world map data for France
# world_map <- map('france')
# 
# # Prepare your latitude and longitude data
# coordinates_df <- data.frame(
#   longitude = c(-0.5, 2.3522, 3.3523),  # Replace with your actual longitude values
#   latitude = c(48.8566, 48.8566, 48.8566)  # Replace with your actual latitude values
# )
# 
